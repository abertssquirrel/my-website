---
import Header from '../components/header.astro'
import Footer from '../components/footer.astro'
import "/src/styles/reset.css"
import "/src/styles/daftpunk-homework.css"
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Daft Punk's "Homework" in CSS</title>
	</head>
  <body>
    <div class="body-wrapper">
      <Header></Header>
      <div class="heading">
        <div class="title-wrapper">
          <h1 class="title1" data-title="ALBUM ART">ALBUM ART</h1>
        </div>
        <h2>
          Recreating <span class="dp-font">Daft Punk's</span> "Homework" in CSS
        </h2>
      </div>
      <section class="how-to">
        <figure class="album-art">
          <img
            src="/assets/photos/album-art/daftpunk-homework.jpg"
            alt="the album art from daft punk's 'homework'"
          />
          <figcaption class="caption">The album art from daft punk's "Homework"</figcaption>
          </figure>
          <p class="p-space">
            I found a <a href="https://www.dafont.com/daft-font.font">website</a> where you could download the font used for the daft punk logo. I immediately downloaded it and began trying to recreate the cover art from their first album “Homework” using just html and css.</p>
          <p class="p-space">It’s a fairly simple design, just some reddish text with two outlines, one black, one yellow.  Sure, <code>webkit-text-stroke</code> only lets you put one outline around your text, and who cares if I have to force the stacked text to have one stacking context.  This is nothing <code>pseudo-elements</code> and a <code>z-index</code> can’t solve. 
          </p>
          <figure class="art-attempt">
          <img
        src="/assets/images/daftpunk-firefox.png"
        alt="a screenshot of what my css version of daft punk's 'homework' looks like in firefox"/>
        <figcaption class="caption">screenshot from firefox</figcaption>
        </figure>
        <p class="p-space">
            I was so delighted when my first attempt came out looking pretty close, that I wrote up a blog post and smuggly included all my code.
        </p>
        <p>
          Then, while tidying up my website… I noticed it.  Chrome butchered my daft punk outlines!  But whatever it’s fine, it’s just Chrome.
        </p>
        <h3>It's not fine!</h3>
        <figure class="art-attempt float-right">
        <img
        src="/assets/images/daftpunk-chrome.png"
        alt="a screenshot of what my css version of daft punk's 'homework' looks like in chrome"/>
        <figcaption class="caption">screenshot from chrome</figcaption>
        </figure>
        <p class="p-space">It looks like some poor left handed kid tried to make due with a dull pair or right-handed scissors</p>
        <p class="p-space">
          I like to work on my websites in firefox, usually I put them in chrome just to check if everything is in order, but for some reason I plumb forgot to see if my daft punk logo looked the same on chrome.
        </p>
        <p class="p-space">Turns out <code>webkit-text-stroke</code> is handled a bit differently between the two web browsers.  Firefox smooths things out quite a bit more.  Normally this isn’t all that noticeable, but with spikier fonts it becomes very obvious.  And I absolutely <span class="double">refuse</span> to use text shadows to create text outlines (i tried, it looked even worse).</p>
         <img
            class="daftpunk-svg"
            src="/assets/svgs/daftpunk-reaction.svg"
            alt="doodles of the daft punk robot helments, looking sad'"
          />
        <p class="p-space">So I give up, you can’t make the daft punk “homework” artwork with just some simple CSS.  And there go my dreams of making all my <code>H1's</code> look like the robots’ first album.</p>
        <p class="p-space">But atleast I learned how to make multiple text outlines… so long as the font isn’t too jagged.</p>
        <h3>Making multiple text outlines, so long as the font isn't too jagged</h3>
        <p class="p-space">If I wanted perfection in my title stylings I could lovingly design them in Inkscape, but I don’t want perfect, I want something easy to replicate, I want good enough.  As hinted at before, the trick to making multiple outlines on text is to use a ::before and ::after pseudo-element.</p>
        <p class="p-space">You just have to make sure to set the content property of your pseudo-elements to whatever text you’re trying to outline.  So if I have an <code>H4</code> tag set to “ROCK!!”, my pseudo-element’s content should also equal “ROCK!!”.</p>
        <figure class="text-wrapper">
          <div>
            <h4 class="word1" data-title="ROCK!!">ROCK!!</h4>
            <h4 class ="word2" data-title="ROBOT">ROBOT</h4>
            <h4 class ="word3" data-title="ROCK!!">ROCK!!</h4>
          </div>
            <figcaption class="caption">The above text has a hotpink, black, and light pink outline!</figcaption>
        </figure>
        <p class="p-space">Because I have multiple heading tags in my example I chose to use the <code>data-title</code> attribute in my html to auto populate the <code>content</code> property in my CSS.  Then it is just a matter of placing the pseudo-elements relative to their corresponding html tag using <code>position: absolute</code> and setting their position and <code>z-index</code> accordingly.  </p>
        <figure class="code-wrapper p-space">
          <figcaption class="code-caption">HTML</figcaption>
          <pre class="code-block p-space"><code>&lt;h4 class="word1" data-title="ROCK!!"&gt;ROCK!!&lt;/h4&gt;
&lt;h4 class ="word2" data-title="ROBOT"&gt;ROBOT&lt;/h4&gt;
&lt;h4 class ="word3" data-title="ROCK!!"&gt;ROCK!!&lt;/h4&gt;</code></pre>
        </figure>
        <figure class="code-wrapper p-space">
          <figcaption class="code-caption">CSS</figcaption>
        <pre class="code-block p-space"><code>h4 &#123;
  position: relative;
  font-family: var(--font-pumpkin);
  font-size: clamp(3rem, 20cqi, 7rem);
  line-height: 0.8;
  color: var(--clr-background);
  text-transform: uppercase;
  -webkit-text-stroke: 3px var(--accent-pink);
  paint-order: stroke;
  overflow-wrap: anywhere;
&#125;

/*black outline*/
.word1::before,
.word2::before,
.word3::before &#123;
  content: attr(data-title);
  position: absolute;
  color: var(--clr-background);
  -webkit-text-stroke: 0.3em var(--clr-background);
  z-index: -10;
&#125;

/*light pink outline*/
.word1::after,
.word2::after,
.word3::after &#123;
  content: attr(data-title);
  position: absolute;
  color: var(--bg-pink);
  -webkit-text-stroke: 0.4em var(--bg-pink);
  left: 0;
  top: 0;
  overflow-wrap: anywhere;
  z-index: -20;
&#125;
</code></pre>
</figure>
<h5 class="bye">THANKS!</h5>
      </section>
      <Footer></Footer>
    </div>
  </body>
</html>
